{"name": "Проверка ответов в блоке 'Вопросы о важном'", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome=131.0.6778.140)\nStacktrace:\n\tGetHandleVerifier [0x00007FF671C86CC5+28821]\n\t(No symbol) [0x00007FF671BF3850]\n\t(No symbol) [0x00007FF671A9578A]\n\t(No symbol) [0x00007FF671A6F4F5]\n\t(No symbol) [0x00007FF671B16247]\n\t(No symbol) [0x00007FF671B2ECE2]\n\t(No symbol) [0x00007FF671B0F0A3]\n\t(No symbol) [0x00007FF671ADA778]\n\t(No symbol) [0x00007FF671ADB8E1]\n\tGetHandleVerifier [0x00007FF671FBFCCD+3408029]\n\tGetHandleVerifier [0x00007FF671FD743F+3504143]\n\tGetHandleVerifier [0x00007FF671FCB61D+3455469]\n\tGetHandleVerifier [0x00007FF671D4BDCB+835995]\n\t(No symbol) [0x00007FF671BFEB6F]\n\t(No symbol) [0x00007FF671BFA824]\n\t(No symbol) [0x00007FF671BFA9BD]\n\t(No symbol) [0x00007FF671BEA1A9]\n\tBaseThreadInitThunk [0x00007FFC0478E8D7+23]\n\tRtlUserThreadStart [0x00007FFC0521FBCC+44]", "trace": "self = <test_accordion.TestAccordion object at 0x000001FC06798E90>, index = 1\n\n    @allure.title(\"Проверка ответов в блоке 'Вопросы о важном'\")\n    @pytest.mark.parametrize(\"index\", range(8))\n    def test_accordion_text(self, index: int) -> None:\n        self.main_page.open()\n        self.main_page.scroll_to_accordion()\n>       self.main_page.click_accoudion_button_by_index(index)\n\ntests\\test_accordion.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsrc\\pages\\main_page.py:28: in click_accoudion_button_by_index\n    self.click(elements[index])\nsrc\\base\\base_page.py:35: in click\n    self.wait.until(EC.element_to_be_clickable(locator)).click()\n.venv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:96: in until\n    value = method(self._driver)\n.venv\\Lib\\site-packages\\selenium\\webdriver\\support\\expected_conditions.py:364: in _predicate\n    element = visibility_of(target)(driver)\n.venv\\Lib\\site-packages\\selenium\\webdriver\\support\\expected_conditions.py:173: in _predicate\n    return _element_if_visible(element)\n.venv\\Lib\\site-packages\\selenium\\webdriver\\support\\expected_conditions.py:179: in _element_if_visible\n    return element if element.is_displayed() == visibility else False\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:252: in is_displayed\n    return self.parent.execute_script(f\"/* isDisplayed */return ({isDisplayed_js}).apply(null, arguments);\", self)\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:444: in execute_script\n    return self.execute(command, {\"script\": script, \"args\": converted_args})[\"value\"]\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:384: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000001FC067BB250>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such window\",\"message\":\"no such window: target window already closed\\\\...07FF671BEA1A9]\\\\n\\\\tBaseThreadInitThunk [0x00007FFC0478E8D7+23]\\\\n\\\\tRtlUserThreadStart [0x00007FFC0521FBCC+44]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nE       from unknown error: web view not found\nE         (Session info: chrome=131.0.6778.140)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF671C86CC5+28821]\nE       \t(No symbol) [0x00007FF671BF3850]\nE       \t(No symbol) [0x00007FF671A9578A]\nE       \t(No symbol) [0x00007FF671A6F4F5]\nE       \t(No symbol) [0x00007FF671B16247]\nE       \t(No symbol) [0x00007FF671B2ECE2]\nE       \t(No symbol) [0x00007FF671B0F0A3]\nE       \t(No symbol) [0x00007FF671ADA778]\nE       \t(No symbol) [0x00007FF671ADB8E1]\nE       \tGetHandleVerifier [0x00007FF671FBFCCD+3408029]\nE       \tGetHandleVerifier [0x00007FF671FD743F+3504143]\nE       \tGetHandleVerifier [0x00007FF671FCB61D+3455469]\nE       \tGetHandleVerifier [0x00007FF671D4BDCB+835995]\nE       \t(No symbol) [0x00007FF671BFEB6F]\nE       \t(No symbol) [0x00007FF671BFA824]\nE       \t(No symbol) [0x00007FF671BFA9BD]\nE       \t(No symbol) [0x00007FF671BEA1A9]\nE       \tBaseThreadInitThunk [0x00007FFC0478E8D7+23]\nE       \tRtlUserThreadStart [0x00007FFC0521FBCC+44]\n\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:232: NoSuchWindowException"}, "steps": [{"name": "Прокрутка страницы до блока 'Вопросы о важном'", "status": "passed", "start": 1734427319863, "stop": 1734427319888}, {"name": "Раскрытие ответа на вопрос в блоке 'Вопрсоы о важном'", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome=131.0.6778.140)\nStacktrace:\n\tGetHandleVerifier [0x00007FF671C86CC5+28821]\n\t(No symbol) [0x00007FF671BF3850]\n\t(No symbol) [0x00007FF671A9578A]\n\t(No symbol) [0x00007FF671A6F4F5]\n\t(No symbol) [0x00007FF671B16247]\n\t(No symbol) [0x00007FF671B2ECE2]\n\t(No symbol) [0x00007FF671B0F0A3]\n\t(No symbol) [0x00007FF671ADA778]\n\t(No symbol) [0x00007FF671ADB8E1]\n\tGetHandleVerifier [0x00007FF671FBFCCD+3408029]\n\tGetHandleVerifier [0x00007FF671FD743F+3504143]\n\tGetHandleVerifier [0x00007FF671FCB61D+3455469]\n\tGetHandleVerifier [0x00007FF671D4BDCB+835995]\n\t(No symbol) [0x00007FF671BFEB6F]\n\t(No symbol) [0x00007FF671BFA824]\n\t(No symbol) [0x00007FF671BFA9BD]\n\t(No symbol) [0x00007FF671BEA1A9]\n\tBaseThreadInitThunk [0x00007FFC0478E8D7+23]\n\tRtlUserThreadStart [0x00007FFC0521FBCC+44]\n\n", "trace": "  File \"D:\\Development\\GitHub\\Sprint_6\\.venv\\Lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"D:\\Development\\GitHub\\Sprint_6\\src\\pages\\main_page.py\", line 28, in click_accoudion_button_by_index\n    self.click(elements[index])\n    ~~~~~~~~~~^^^^^^^^^^^^^^^^^\n  File \"D:\\Development\\GitHub\\Sprint_6\\src\\base\\base_page.py\", line 35, in click\n    self.wait.until(EC.element_to_be_clickable(locator)).click()\n    ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\Development\\GitHub\\Sprint_6\\.venv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py\", line 96, in until\n    value = method(self._driver)\n  File \"D:\\Development\\GitHub\\Sprint_6\\.venv\\Lib\\site-packages\\selenium\\webdriver\\support\\expected_conditions.py\", line 364, in _predicate\n    element = visibility_of(target)(driver)\n  File \"D:\\Development\\GitHub\\Sprint_6\\.venv\\Lib\\site-packages\\selenium\\webdriver\\support\\expected_conditions.py\", line 173, in _predicate\n    return _element_if_visible(element)\n  File \"D:\\Development\\GitHub\\Sprint_6\\.venv\\Lib\\site-packages\\selenium\\webdriver\\support\\expected_conditions.py\", line 179, in _element_if_visible\n    return element if element.is_displayed() == visibility else False\n                      ~~~~~~~~~~~~~~~~~~~~^^\n  File \"D:\\Development\\GitHub\\Sprint_6\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 252, in is_displayed\n    return self.parent.execute_script(f\"/* isDisplayed */return ({isDisplayed_js}).apply(null, arguments);\", self)\n           ~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\Development\\GitHub\\Sprint_6\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 444, in execute_script\n    return self.execute(command, {\"script\": script, \"args\": converted_args})[\"value\"]\n           ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\Development\\GitHub\\Sprint_6\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 384, in execute\n    self.error_handler.check_response(response)\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^\n  File \"D:\\Development\\GitHub\\Sprint_6\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 232, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "parameters": [{"name": "index", "value": "1"}], "start": 1734427319888, "stop": 1734427327990}], "parameters": [{"name": "index", "value": "1"}], "start": 1734427318930, "stop": 1734427327996, "uuid": "c1076b8f-3470-4265-a1d9-4d778679c9b6", "historyId": "b57650a12b6e983deb498d981c84b092", "testCaseId": "2c956c62108848a7c8736fcd0fd37826", "fullName": "tests.test_accordion.TestAccordion#test_accordion_text", "labels": [{"name": "feature", "value": "Блок 'Вопросы о важном' на главной странице"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_accordion"}, {"name": "subSuite", "value": "TestAccordion"}, {"name": "host", "value": "home"}, {"name": "thread", "value": "25088-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_accordion"}]}